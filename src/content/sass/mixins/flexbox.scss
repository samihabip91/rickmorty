// Flexbox display
// flex or inline-flex
@mixin display($display: flex) {
	display: -webkit-#{$display};
    display: -moz-box;
	display: -ms-#{$display}box; // IE10 uses -ms-flexbox
	display: -ms-#{$display}; // IE11
	display: $display;
}

@mixin flexProcessor($selector, $value) {
  -moz-#{$selector}: $value;
  -webkit-#{$selector}: $value;
  -ms-#{$selector}: $value;
  #{$selector}: $value;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($columns: initial) {
    @include flexProcessor(flex, $columns);
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction: row) {
    @include flexProcessor(flex-direction, $direction);
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap: nowrap) {
    @include flexProcessor(flex-wrap, $wrap);
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
    @include flexProcessor(flex-flow, $flow);
}

// Display Order
// - applies to: flex items
// <integer>
@mixin flex-order($order: 0) {
    @include flexProcessor(order, $order);
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow: 0) {
    @include flexProcessor(flex-grow, $grow);
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink: 1) {
    @include flexProcessor(flex-shrink, $shrink);
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex items
// <width>
@mixin flex-basis($width: auto) {
    @include flexProcessor(flex-basis, $width);
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify: flex-start) {
    @include flexProcessor(justify-content, $justify);
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align: stretch) {
    @include flexProcessor(align-content, $align);
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align: stretch) {
    @include flexProcessor(align-items, $align);
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align: auto) {
  @include flexProcessor(align-self, $align);
}